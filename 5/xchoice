#! /usr/bin/env racket
#lang racket

(require json)

(require "../Maze/Common/serialize.rkt")
(require "../Maze/Common/state.rkt")
(require "../Maze/Common/board.rkt")
(require "../Maze/Players/strategy.rkt")


;; InputPort -> (values HashTable HashTable)
;; Reads a board object and coordinate object from STDIN
(define (read-state-input input-port)
  (define strategy (read-json input-port))
  (define state-ht (read-json input-port))
  (define goal-ht (read-json input-port))
  (values strategy state-ht goal-ht))


;; Reads a board and position from STDIN, computes all positions reachable from
;; the given position, and writes these positions to STDOUT as JSON
(module+ main
  (define-values (strategy state-ht goal-ht) (read-state-input (current-input-port)))

  (define goal (hash->gridposn goal-ht))
  (define gstate (change-active-player-treasure (hash->gamestate state-ht) goal))
  (define pstate (referee-state->player-state gstate (current-player-color gstate)))

  (write-json (action->json (if (equal? strategy "Riemann") (riemann-strategy pstate) (euclidean-strategy pstate)))))
